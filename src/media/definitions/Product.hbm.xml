<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                                   "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="media.definitions">
	<class name="Product" table="Produkte">
		<id column="ASIN" name="asin" type="string">
			<generator class="native" />
		</id>

		<property column="Verkaufsrang" generated="never" lazy="false" name="salesRank" insert="false" update="false" type="integer" />
		
		<property column="Titel" generated="never" lazy="false" name="title" type="string" />
		
		<!-- Price ist nicht eindeutig würde nur den ersten Preis nehmen currency 
			fehlt in der DB available ist kein boolean mapping fehler -->
			
		<property column="PicUrl" generated="never" lazy="false" name="picUrl" type="string" />
		
		<set cascade="all" fetch="select" lazy="true" name="categories"
			sort="unsorted" table="teilVon">
			<key column="ASIN" foreign-key="Parent" />
			<one-to-many class="Category" />
		</set>
		
		<set fetch="select" inverse="true" lazy="true" name="reviews"
			sort="unsorted" table="Review">
			<key>
				<column name="ASIN" not-null="true" />
			</key>
			<one-to-many class="Review" />
		</set>
		
		<!-- <property name="type" column="Typ" not-null="true"/> -->
		
		<!--############################################ Buch ############################### -->
		<joined-subclass name="media.definitions.Book"
			extends="media.definitions.Product" table="Buch" lazy="false">
			<key column="ASIN" />

			<property column="ISBN" generated="never" lazy="false" name="isbn" type="string" />
			<property column="Seitenzahl" generated="never" lazy="false"
				name="pages" type="integer" />
			<property column="PubDate" generated="never" lazy="false"
				name="pubDate" type="date" />

			<!-- wir haben nur einen Publisher -->

			<set fetch="select" inverse="true" lazy="true" name="publishers"
				sort="unsorted" table="Buch">
				<key>
					<column name="Publisher" not-null="true" />
				</key>
				<one-to-many class="Product" />
			</set>


			<set cascade="all" fetch="select" lazy="true" name="authors"
				sort="unsorted" table="hatAutor">
				<key column="ASIN" />
				<many-to-many class="Person" column="Namen" unique="false" />
			</set>
		</joined-subclass>
		<!--############################################ DVD ############################### -->
		<joined-subclass name="media.definitions.DVD" extends="media.definitions.Product"
			table="DVD" lazy="false">
			<key column="ASIN" />
			<property name="format" type="java.lang.String">
				<column name="FORMAT" />
			</property>
	        
			<property name="regionCode" type="integer">
				<column name="REGIONCODE" />
			</property>
			<property name="runningTime" type="java.lang.Integer">
				<column name="LAUFZEIT" />
			</property>
			<set name="actors" cascade="save-update" table="TEAM" where="Team.Position = 'actors'">
				<key column="asin" />
				<many-to-many column="Name" class="Person" />
			</set>
			<set name="creators" cascade="save-update" table="TEAM" where="Team.Position = 'creators'">
				<key column="asin" />
				<many-to-many column="Name" class="Person" />
			</set>
			<set name="directors" cascade="save-update" table="TEAM" where="Team.Position = 'directors'">
				<key column="asin" />
				<many-to-many column="Name" class="Person" />
			</set>
		</joined-subclass>
		<!--############################################ Musik ############################### -->
		<joined-subclass name="media.definitions.Music" extends="media.definitions.Product"
			table="CD" lazy="false">
			<key column="ASIN" />
			<property column="ReleaseDate" name="releaseDate" />
			<!-- müssen noch labels, tracks und artist mappen -->
			<set name="tracks" table="Lied">
			    <key column="Asin" />
				<many-to-many column="titel" class="media.definitions.Music$Track" />
			</set>
		</joined-subclass>
	</class>
</hibernate-mapping>
